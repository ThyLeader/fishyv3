// Package models contains the types for schema 'public'.
package models

// Code generated by xo. DO NOT EDIT.

import (
	"database/sql/driver"
	"errors"
)

// Location is the 'location' enum type from schema 'public'.
type Location uint16

const (
	// LocationLake is the 'lake' Location.
	LocationLake = Location(1)

	// LocationRiver is the 'river' Location.
	LocationRiver = Location(2)

	// LocationOcean is the 'ocean' Location.
	LocationOcean = Location(3)
)

// String returns the string value of the Location.
func (l Location) String() string {
	var enumVal string

	switch l {
	case LocationLake:
		enumVal = "lake"

	case LocationRiver:
		enumVal = "river"

	case LocationOcean:
		enumVal = "ocean"
	}

	return enumVal
}

// MarshalText marshals Location into text.
func (l Location) MarshalText() ([]byte, error) {
	return []byte(l.String()), nil
}

// UnmarshalText unmarshals Location from text.
func (l *Location) UnmarshalText(text []byte) error {
	switch string(text) {
	case "lake":
		*l = LocationLake

	case "river":
		*l = LocationRiver

	case "ocean":
		*l = LocationOcean

	default:
		return errors.New("invalid Location")
	}

	return nil
}

// Value satisfies the sql/driver.Valuer interface for Location.
func (l Location) Value() (driver.Value, error) {
	return l.String(), nil
}

// Scan satisfies the database/sql.Scanner interface for Location.
func (l *Location) Scan(src interface{}) error {
	buf, ok := src.([]byte)
	if !ok {
		return errors.New("invalid Location")
	}

	return l.UnmarshalText(buf)
}
