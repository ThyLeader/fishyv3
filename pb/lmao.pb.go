// Code generated by protoc-gen-go. DO NOT EDIT.
// source: lmao.proto

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type FishRequest struct {
}

func (m *FishRequest) Reset()                    { *m = FishRequest{} }
func (m *FishRequest) String() string            { return proto.CompactTextString(m) }
func (*FishRequest) ProtoMessage()               {}
func (*FishRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

type FishResponse struct {
}

func (m *FishResponse) Reset()                    { *m = FishResponse{} }
func (m *FishResponse) String() string            { return proto.CompactTextString(m) }
func (*FishResponse) ProtoMessage()               {}
func (*FishResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

type UserItem struct {
	Current int32   `protobuf:"varint,1,opt,name=current" json:"current,omitempty"`
	Owned   []int32 `protobuf:"varint,2,rep,packed,name=owned" json:"owned,omitempty"`
}

func (m *UserItem) Reset()                    { *m = UserItem{} }
func (m *UserItem) String() string            { return proto.CompactTextString(m) }
func (*UserItem) ProtoMessage()               {}
func (*UserItem) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func (m *UserItem) GetCurrent() int32 {
	if m != nil {
		return m.Current
	}
	return 0
}

func (m *UserItem) GetOwned() []int32 {
	if m != nil {
		return m.Owned
	}
	return nil
}

type UserItems struct {
	Bait    *UserItem `protobuf:"bytes,1,opt,name=bait" json:"bait,omitempty"`
	Rod     *UserItem `protobuf:"bytes,2,opt,name=rod" json:"rod,omitempty"`
	Hook    *UserItem `protobuf:"bytes,3,opt,name=hook" json:"hook,omitempty"`
	Vehicle *UserItem `protobuf:"bytes,4,opt,name=vehicle" json:"vehicle,omitempty"`
	BaitBox *UserItem `protobuf:"bytes,5,opt,name=bait_box,json=baitBox" json:"bait_box,omitempty"`
}

func (m *UserItems) Reset()                    { *m = UserItems{} }
func (m *UserItems) String() string            { return proto.CompactTextString(m) }
func (*UserItems) ProtoMessage()               {}
func (*UserItems) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

func (m *UserItems) GetBait() *UserItem {
	if m != nil {
		return m.Bait
	}
	return nil
}

func (m *UserItems) GetRod() *UserItem {
	if m != nil {
		return m.Rod
	}
	return nil
}

func (m *UserItems) GetHook() *UserItem {
	if m != nil {
		return m.Hook
	}
	return nil
}

func (m *UserItems) GetVehicle() *UserItem {
	if m != nil {
		return m.Vehicle
	}
	return nil
}

func (m *UserItems) GetBaitBox() *UserItem {
	if m != nil {
		return m.BaitBox
	}
	return nil
}

type FishInventory struct {
	Fish        int32 `protobuf:"varint,1,opt,name=fish" json:"fish,omitempty"`
	Garbage     int32 `protobuf:"varint,2,opt,name=garbage" json:"garbage,omitempty"`
	Legendaries int32 `protobuf:"varint,3,opt,name=legendaries" json:"legendaries,omitempty"`
	Worth       int32 `protobuf:"varint,4,opt,name=worth" json:"worth,omitempty"`
}

func (m *FishInventory) Reset()                    { *m = FishInventory{} }
func (m *FishInventory) String() string            { return proto.CompactTextString(m) }
func (*FishInventory) ProtoMessage()               {}
func (*FishInventory) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{4} }

func (m *FishInventory) GetFish() int32 {
	if m != nil {
		return m.Fish
	}
	return 0
}

func (m *FishInventory) GetGarbage() int32 {
	if m != nil {
		return m.Garbage
	}
	return 0
}

func (m *FishInventory) GetLegendaries() int32 {
	if m != nil {
		return m.Legendaries
	}
	return 0
}

func (m *FishInventory) GetWorth() int32 {
	if m != nil {
		return m.Worth
	}
	return 0
}

type BaitInventory struct {
	T1 int32 `protobuf:"varint,1,opt,name=t1" json:"t1,omitempty"`
	T2 int32 `protobuf:"varint,2,opt,name=t2" json:"t2,omitempty"`
	T3 int32 `protobuf:"varint,3,opt,name=t3" json:"t3,omitempty"`
	T4 int32 `protobuf:"varint,4,opt,name=t4" json:"t4,omitempty"`
	T5 int32 `protobuf:"varint,5,opt,name=t5" json:"t5,omitempty"`
}

func (m *BaitInventory) Reset()                    { *m = BaitInventory{} }
func (m *BaitInventory) String() string            { return proto.CompactTextString(m) }
func (*BaitInventory) ProtoMessage()               {}
func (*BaitInventory) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{5} }

func (m *BaitInventory) GetT1() int32 {
	if m != nil {
		return m.T1
	}
	return 0
}

func (m *BaitInventory) GetT2() int32 {
	if m != nil {
		return m.T2
	}
	return 0
}

func (m *BaitInventory) GetT3() int32 {
	if m != nil {
		return m.T3
	}
	return 0
}

func (m *BaitInventory) GetT4() int32 {
	if m != nil {
		return m.T4
	}
	return 0
}

func (m *BaitInventory) GetT5() int32 {
	if m != nil {
		return m.T5
	}
	return 0
}

func init() {
	proto.RegisterType((*FishRequest)(nil), "fishyv3.FishRequest")
	proto.RegisterType((*FishResponse)(nil), "fishyv3.FishResponse")
	proto.RegisterType((*UserItem)(nil), "fishyv3.UserItem")
	proto.RegisterType((*UserItems)(nil), "fishyv3.UserItems")
	proto.RegisterType((*FishInventory)(nil), "fishyv3.FishInventory")
	proto.RegisterType((*BaitInventory)(nil), "fishyv3.BaitInventory")
}

func init() { proto.RegisterFile("lmao.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 325 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x92, 0x4f, 0x6b, 0xc2, 0x40,
	0x10, 0xc5, 0x71, 0xcd, 0x56, 0x3b, 0x56, 0xa1, 0x4b, 0x0f, 0x39, 0x4a, 0x4a, 0x41, 0x68, 0x11,
	0x34, 0x7a, 0xe9, 0xd1, 0x43, 0xc1, 0xeb, 0x42, 0x2f, 0xbd, 0x48, 0xa2, 0x53, 0x13, 0xaa, 0x19,
	0xbb, 0x3b, 0xfe, 0xfb, 0xa8, 0xfd, 0x36, 0x65, 0x37, 0x09, 0xed, 0x25, 0xb7, 0xfc, 0x32, 0x6f,
	0xde, 0xcc, 0x3c, 0x16, 0x60, 0xb7, 0x4f, 0x68, 0x7c, 0x30, 0xc4, 0xa4, 0x3a, 0x9f, 0xb9, 0xcd,
	0xae, 0xa7, 0x38, 0xea, 0x43, 0xef, 0x2d, 0xb7, 0x99, 0xc6, 0xef, 0x23, 0x5a, 0x8e, 0x06, 0x70,
	0x57, 0xa2, 0x3d, 0x50, 0x61, 0x31, 0x7a, 0x85, 0xee, 0xbb, 0x45, 0xb3, 0x64, 0xdc, 0xab, 0x10,
	0x3a, 0xeb, 0xa3, 0x31, 0x58, 0x70, 0xd8, 0x1a, 0xb6, 0x46, 0x52, 0xd7, 0xa8, 0x1e, 0x40, 0xd2,
	0xb9, 0xc0, 0x4d, 0x28, 0x86, 0xed, 0x91, 0xd4, 0x25, 0x44, 0x3f, 0x2d, 0xb8, 0xad, 0x9b, 0xad,
	0x7a, 0x82, 0x20, 0x4d, 0xf2, 0xb2, 0xb5, 0x37, 0xbd, 0x1f, 0x57, 0x0b, 0x8c, 0x6b, 0x85, 0xf6,
	0x65, 0xf5, 0x08, 0x6d, 0x43, 0xce, 0xa8, 0x41, 0xe5, 0xaa, 0xce, 0x2b, 0x23, 0xfa, 0x0a, 0xdb,
	0x8d, 0x5e, 0xae, 0xac, 0x9e, 0xa1, 0x73, 0xc2, 0x2c, 0x5f, 0xef, 0x30, 0x0c, 0x9a, 0x94, 0xb5,
	0x42, 0xbd, 0x40, 0xd7, 0x2d, 0xb0, 0x4a, 0xe9, 0x12, 0xca, 0x46, 0xb5, 0x93, 0x2c, 0xe8, 0x12,
	0x1d, 0xa1, 0xef, 0x72, 0x5a, 0x16, 0x27, 0x2c, 0x98, 0xcc, 0x55, 0x29, 0x08, 0x9c, 0xba, 0x4a,
	0xc6, 0x7f, 0xbb, 0xc0, 0xb6, 0x89, 0x49, 0x93, 0x2d, 0xfa, 0x7b, 0xa4, 0xae, 0x51, 0x0d, 0xa1,
	0xb7, 0xc3, 0x2d, 0x16, 0x9b, 0xc4, 0xe4, 0x68, 0xfd, 0x1d, 0x52, 0xff, 0xff, 0xe5, 0x22, 0x3d,
	0x93, 0xe1, 0xcc, 0x6f, 0x2e, 0x75, 0x09, 0xd1, 0x0a, 0xfa, 0x8b, 0x24, 0xe7, 0xbf, 0xb1, 0x03,
	0x10, 0x3c, 0xa9, 0x86, 0x0a, 0x9e, 0x78, 0x9e, 0x56, 0xd3, 0x04, 0x4f, 0x3d, 0xc7, 0x95, 0xbf,
	0xe0, 0xd8, 0xf3, 0xac, 0xf2, 0x14, 0x3c, 0xf3, 0x3c, 0xf7, 0xf7, 0x3a, 0x9e, 0x2f, 0x82, 0x0f,
	0x71, 0x48, 0xd3, 0x1b, 0xff, 0x48, 0xe2, 0xdf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x75, 0x18, 0x61,
	0xb8, 0x32, 0x02, 0x00, 0x00,
}
